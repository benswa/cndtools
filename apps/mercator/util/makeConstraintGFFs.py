#!/usr/bin/env python

# Copyright (c) 2006
# Colin Dewey (University of Wisconsin-Madison)
# cdewey@biostat.wisc.edu
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA


import sys
import os

import GFF
import TabDelimited

if len(sys.argv) != 2:
    print "Usage: %s mapdir" % sys.argv[0]
    sys.exit(1)

mapDir = sys.argv[1]

# Get the list of genomes
genomes = file(os.path.join(mapDir, "genomes")).read().split()

# Create constraint GFF files for each genome
constraintFiles = dict([(g, file(os.path.join(mapDir, g + ".constraints.gff"),
                                 'w'))
                        for g in genomes])

# Function to write a constraint to the appropriate file
def writeConstraint(genome, chrom, strand, start, end):
    f = constraintFiles[genome]
    rec = GFF.Record(seqname=chrom,
                     source="mercator",
                     feature="constraint",
                     start=int(start) + 1,
                     end=int(end),
                     score=None,
                     strand=strand,
                     frame=None,
                     attributes={})
    print >>f, rec

# Write to the appropriate contraint files for each line in the main
# constraints file generated by the mapmaker
for fields in TabDelimited.Iterator(file(os.path.join(mapDir, "constraints"))):
    writeConstraint(*fields[1:6])
    writeConstraint(*fields[6:11])
